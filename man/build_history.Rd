% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build_history.R
\name{build_history}
\alias{build_history}
\title{Create backup and update new historical database of AAA screening KPIs, only runs if season is "autumn"}
\usage{
build_history(
  df_hist,
  df_new,
  kpi_number,
  season = season,
  kpi_report_years = kpi_report_years,
  fy_list = fy_list,
  hb_list = hb_list,
  year_n = year2,
  hist_path = hist_path
)
}
\arguments{
\item{df_hist}{Dataframe/tibble which contains historical data for relevant KPI.}

\item{df_new}{Dataframe/tibble containing new data for relevant KPI.}

\item{kpi_number}{KPI being added to the historical database, options are: "1.1-1.3", "1.4", "2", or "3"}

\item{season}{Season of analysis, options are "Spring" or "Autumn"}

\item{kpi_report_years}{Character vector, must be >= 3 length. Includes financial year being published, plus two prior.}

\item{fy_list}{Character vector of financial years in data, in chronological order}

\item{hb_list}{Character vector of Health Board names, in alphabetic order}

\item{year_n}{Used for KPIs 1.1-1.3 or 1.4, character variable of a financial year. Default is 'year2', which corresponds to the financial year following that which is being published.}

\item{hist_path}{Filepath that points to the output directory - this is where previous historical data exists.}
}
\value{
New historical dataframe/tibble updated for this analysis round.
}
\description{
Function requires multiple global environment variables to be specified:
'season' - either 'autumn' or 'spring'
'hist_path' - path to directory where historical files are to be stored
'kpi_report_years' - vector containing 3 character strings of financial years - third is the FY due to be published next
'fy_list' - list of financial years covering time since AAA screening started, in chronological order
'hb_list' - list of NHS Health Boards in alphabetical order
}
\examples{


old <- dplyr::tibble(fin_year = c("2021/22", "2022/23"), kpi = "2.2", hbres = "Lothian", value = c(1,2))
new <- dplyr::tibble(fin_year = "2023/24", kpi = "2.2", hbres = "Lothian", value = 4)

new_hist_db <- build_history(old, new, "2", season = "autumn", kpi_report_years = c("2021/22", "2022/23", "2023/24"), fy_list = fy_list, hb_list = hb_list, year_n = "2024/25")

print(new_hist_db)

# A tibble: 3 Ã— 4
#    fin_year     kpi      hbres     value
#     <fct>      <chr>     <fct>     <dbl>
# 1  2021/22      2.2      Lothian     1
# 2  2022/23      2.2      Lothian     2
# 3 2023/24       2.2      Lothian     4
}
